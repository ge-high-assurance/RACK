# Builds a Docker image upon every push (while ignoring tag-only pushes):
#  - Caches files needed to build rack-box images
#  - Builds rack-box:dev Docker image
#  - Pushes rack-box:dev image to Docker Hub

name: RACK-in-a-Box continous build

on:
  pull_request:
    branches: [ '*' ]
  push:
    branches: [ '*' ]
    tags-ignore: [ '*' ]

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - name: Check out RACK source
      uses: actions/checkout@v2
      with:
        repository: ge-high-assurance/RACK
        token: ${{ secrets.RACK_CI_PAT }}
        path: RACK

    - name: Cache Fuseki distribution
      uses: actions/cache@v2
      id: cache-fuseki
      with:
        path: RACK/rack-box/files/fuseki.tar.gz
        key: fuseki-3.16.0

    - name: Download Fuseki distribution
      if: steps.cache-fuseki.outputs.cache-hit != 'true'
      run: curl -LSs https://apache.claz.org/jena/binaries/apache-jena-fuseki-3.16.0.tar.gz -o RACK/rack-box/files/fuseki.tar.gz

    - name: Download SemTK distribution
      run: curl -LSs https://github.com/ge-semtk/semtk/releases/download/v2.3.0-20201124/semtk-opensource-v2.3.0-20201124-dist.tar.gz -o RACK/rack-box/files/semtk.tar.gz

    - name: Download style spreadsheet
      run: curl -LSs https://github.com/KrauseFx/markdown-to-html-github-style/raw/master/style.css -o RACK/rack-box/files/style.css

    - name: Download systemctl script
      run: curl -LSs https://github.com/gdraheim/docker-systemctl-replacement/raw/v1.5.4260/files/docker/systemctl3.py -o RACK/rack-box/files/systemctl3.py

    - name: Cache RACK CLI dependencies
      uses: actions/cache@v2
      with:
        # This path is specific to Ubuntu
        path: ~/.cache/pip
        # Look to see if there is a cache hit for the corresponding requirements file
        key: ${{ runner.os }}-pip-${{ hashFiles('RACK/cli/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          ${{ runner.os }}-

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Package RACK CLI
      run: |
        cd RACK/cli
        python3 -m pip install --upgrade pip setuptools wheel
        pip3 wheel --wheel-dir=wheels -r requirements.txt
        pip3 wheel --wheel-dir=wheels .
        cd ${{ github.workspace }}
        tar cfz RACK/rack-box/files/rack-cli.tar.gz RACK/cli/{setup-rack.sh,wheels}

    - name: Package RACK ontology and data
      run: tar cfz RACK/rack-box/files/rack.tar.gz --exclude=.git --exclude=.github --exclude=assist --exclude=cli --exclude=rack-box --exclude=tools --exclude=tests RACK

    - name: Check out RACK wiki
      uses: actions/checkout@v2
      with:
        repository: ge-high-assurance/RACK.wiki
        token: ${{ secrets.RACK_CI_PAT }}
        path: RACK.wiki

    - name: Generate RACK documentation
      run: |
        sudo npm install -g github-wikito-converter markdown-to-html
        gwtc -t RACK-in-a-Box RACK.wiki
        markdown -t RACK-in-a-box -s style.css RACK.wiki/Welcome.md > index.html
        mv documentation.html index.html RACK/rack-box/files

    - name: Build rack-box image
      run: |
        cd RACK/rack-box
        packer build -var version=dev rack-box-docker.json

    - name: Login to Docker Hub
      if: github.ref == 'refs/heads/master'
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Push rack-box image to Docker Hub
      if: github.ref == 'refs/heads/master'
      run: docker push gehighassurance/rack-box:dev
