# Builds rack-box images when a release is published:
#  - Caches files needed to build rack-box images
#  - Builds rack-box images for Docker and VirtualBox
#  - Pushes rack-box Docker image to Docker Hub
#  - Uploads rack-box VirtualBox image to GitHub release page

name: RACK-in-a-Box release build

on:
  release:
    types: [ published ]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
# docker works on all, but ubuntu is cheapest
        - builder: docker
          os: ubuntu-20.04
          shell: bash
# hyperv isn't supported yet (https://github.com/actions/virtual-environments/issues/183#issuecomment-706244929)
#        - builder: hyperv
#          os: windows-latest
#          shell: msys2 {0}
# virtualbox works only on macos (VT-x is not available: VERR_VMK_NO_VMX)
        - builder: virtualbox
          os: macos-latest
          shell: bash

    name: build ${{ matrix.builder }} ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: ${{ matrix.shell }}

    steps:
    - name: Check out RACK source
      uses: actions/checkout@v2
      with:
        repository: ge-high-assurance/RACK
        ref: ${{ github.event.release.tag_name }}
        token: ${{ secrets.RACK_CI_PAT }}
        path: RACK

    - name: Cache Fuseki distribution
      uses: actions/cache@v2
      id: cache-fuseki
      with:
        path: RACK/rack-box/files/fuseki.tar.gz
        key: fuseki-3.16.0

    - name: Download Fuseki distribution
      if: steps.cache-fuseki.outputs.cache-hit != 'true'
      run: curl -LSs https://apache.claz.org/jena/binaries/apache-jena-fuseki-3.16.0.tar.gz -o RACK/rack-box/files/fuseki.tar.gz

    - name: Download SemTK distribution
      run: curl -LSs https://github.com/ge-semtk/semtk/releases/download/v2.3.0-20201124/semtk-opensource-v2.3.0-20201124-dist.tar.gz -o RACK/rack-box/files/semtk.tar.gz

    - name: Download style spreadsheet
      run: curl -LSs https://github.com/KrauseFx/markdown-to-html-github-style/raw/master/style.css -o RACK/rack-box/files/style.css

    - name: Download systemctl script
      run: curl -LSs https://github.com/gdraheim/docker-systemctl-replacement/raw/v1.5.4260/files/docker/systemctl3.py -o RACK/rack-box/files/systemctl3.py

    - name: Cache RACK CLI dependencies
      uses: actions/cache@v2
      with:
        # This path is specific to Ubuntu
        path: ~/.cache/pip
        # Look to see if there is a cache hit for the corresponding requirements file
        key: ${{ runner.os }}-pip-${{ hashFiles('RACK/cli/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          ${{ runner.os }}-

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Package RACK CLI
      run: |
        cd RACK/cli
        python3 -m pip install --upgrade pip setuptools wheel
        pip3 wheel --wheel-dir=wheels -r requirements.txt
        pip3 wheel --wheel-dir=wheels .
        cd ${{ github.workspace }}
        tar cfz RACK/rack-box/files/rack-cli.tar.gz RACK/cli/{setup-rack.sh,wheels}

    - name: Package RACK ontology and data
      run: tar cfz RACK/rack-box/files/rack.tar.gz --exclude=.git --exclude=.github --exclude=assist --exclude=cli --exclude=rack-box --exclude=tools --exclude=tests RACK

    - name: Check out RACK wiki
      uses: actions/checkout@v2
      with:
        repository: ge-high-assurance/RACK.wiki
        ref: ${{ github.event.release.tag_name }}
        token: ${{ secrets.RACK_CI_PAT }}
        path: RACK.wiki

    - name: Generate RACK documentation
      run: |
        sudo npm install -g github-wikito-converter markdown-to-html
        gwtc -t RACK-in-a-Box RACK.wiki
        markdown -t RACK-in-a-box -s style.css RACK.wiki/Welcome.md > index.html
        mv documentation.html index.html RACK/rack-box/files

    # Skip since windows-latest doesn't support nested virtualization yet
    - name: Enable Hyper-V
      if: matrix.builder == 'hyperv' && matrix.os == 'windows-latest'
      shell: powershell
      run: |
        Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Hyper-V -All
        Add-WindowsFeature RSAT-Hyper-V-Tools -IncludeAllSubFeature

    # Skip since ubuntu-20.04 doesn't support nested virtualization yet
    - name: Install VirtualBox
      if: matrix.builder == 'virtualbox' && matrix.os == 'ubuntu-20.04'
      run: sudo apt-get install -y virtualbox

    - name: Cache Ubuntu ISO
      if: matrix.builder != 'docker'
      uses: actions/cache@v2
      id: cache-ubuntu
      with:
        path: RACK/rack-box/packer_cache/e30b34e4d3c536763868a42bb9d5b8f14af297b8.iso
        key: ubuntu-20.04.1

    - name: Build rack-box image
      run: |
        b=${{ matrix.builder }}
        v=${{ github.event.release.tag_name }}
        cd RACK/rack-box
        packer build -var headless=true -var version=$v rack-box-$b.json

    - name: Login to Docker Hub
      if: matrix.builder == 'docker'
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Push rack-box image to Docker Hub
      if: matrix.builder == 'docker'
      run: docker push gehighassurance/rack-box:${{ github.event.release.tag_name }}

    - name: Split rack-box image
      if: matrix.builder != 'docker'
      run: |
        b=${{ matrix.builder }}
        v=${{ github.event.release.tag_name }}
        cd RACK/rack-box
        mv output-$b-iso rack-box-$b-$v
        zip -r rack-box-$b-$v.zip rack-box-$b-$v
        split -b 1500m rack-box-$b-$v.zip rack-box-$b-$v.zip
        ls -l rack-box-$b-$v.zip??

    - name: Upload rack-box split image (1/3) to GitHub release assets
      if: matrix.builder != 'docker'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: RACK/rack-box/rack-box-${{ matrix.builder }}-${{ github.event.release.tag_name }}.zipaa
        asset_name: rack-box-${{ matrix.builder }}-${{ github.event.release.tag_name }}.zip00
        asset_content_type: application/zip

    - name: Upload rack-box split image (2/3) to GitHub release assets
      if: matrix.builder != 'docker'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: RACK/rack-box/rack-box-${{ matrix.builder }}-${{ github.event.release.tag_name }}.zipab
        asset_name: rack-box-${{ matrix.builder }}-${{ github.event.release.tag_name }}.zip01
        asset_content_type: application/zip

    - name: Upload rack-box split image (3/3) to GitHub release assets
      if: matrix.builder != 'docker'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: RACK/rack-box/rack-box-${{ matrix.builder }}-${{ github.event.release.tag_name }}.zipac
        asset_name: rack-box-${{ matrix.builder }}-${{ github.event.release.tag_name }}.zip02
        asset_content_type: application/zip

    - name: Upload README.md to GitHub release assets
      if: matrix.builder != 'docker'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: RACK/rack-box/README-GitHub-Release.md
        asset_name: README.md
        asset_content_type: text/markdown; charset=UTF-8
