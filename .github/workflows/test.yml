name: Test RACK

on:
  pull_request:
    branches: [ '*' ]
  push:
    branches: [ '*' ]
    tags-ignore: [ '*' ]

jobs:
  test:
    runs-on: ubuntu-20.04

    steps:
    - name: Check out RACK source
      uses: actions/checkout@v2
      with:
        repository: ge-high-assurance/RACK
        token: ${{ secrets.RACK_CI_PAT }}
        path: RACK

    - name: Download Fuseki distribution
      if: steps.cache-fuseki.outputs.cache-hit != 'true'
      run: curl -LSs https://apache.claz.org/jena/binaries/apache-jena-fuseki-3.16.0.tar.gz -o RACK/rack-box/files/fuseki.tar.gz

    - name: Download SemTK distribution
      run: curl -LSs https://github.com/ge-semtk/semtk/releases/download/v2.3.0-20201103/semtk-opensource-v2.3.0-20201103-dist.tar.gz -o RACK/rack-box/files/semtk.tar.gz

    - name: Cache RACK CLI dependencies
      uses: actions/cache@v2
      with:
        # This path is specific to Ubuntu
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('RACK/cli/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          ${{ runner.os }}-

    - name: Package RACK CLI
      run: |
        cd RACK/cli
        python3 -m pip install --upgrade pip setuptools wheel
        python3 -m pip wheel --wheel-dir=wheels -r requirements.txt
        python3 -m pip wheel --wheel-dir=wheels .
        cd ${{ github.workspace }}
        tar cfz RACK/rack-box/files/rack-cli.tar.gz RACK/cli/{setup-rack.sh,wheels}

    - name: Package RACK ontology and data
      run: |
        tar cfz RACK/rack-box/files/rack.tar.gz --exclude=.git --exclude=.github --exclude=assist --exclude=cli --exclude=rack-box --exclude=tests --exclude=tools RACK

    - name: Download SemTK distribution
      if: steps.cache-semtk.outputs.cache-hit != 'true'
      run: curl -LSs 'https://oss.sonatype.org/service/local/artifact/maven/content?r=snapshots&g=com.ge.research.semtk&a=distribution&v=2.2.2-SNAPSHOT&c=bin&e=tar.gz' -o RACK/rack-box/files/semtk.tar.gz

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install RACK
      run: |
        cd RACK/rack-box
        touch ./files/{documentation.html,index.html,style.css,systemctl3.py}
        mkdir -p /tmp/files
        for f in ./files/*; do
          ln -s $(realpath ${f}) /tmp/files/$(basename ${f})
        done
        sudo bash ./scripts/install.sh ${USER}

    - name: Run tests
      run: |
        cd RACK
        python3 -m pip install cli/wheels/*.whl
        python3 -m pip install -r tests/requirements.txt
        python3 -m pytest tests
