from __future__ import annotations
from typing import Any, Iterable, List, Optional, Tuple

class Graph:
    def add(self, triple: Tuple[Any, URIRef, Any]) -> None: ...
    def bind(self, shorthand: str, namespace: Namespace) -> None: ...
    def serialize(self, format: str) -> bytes: ...

class Identifier: ...

class Literal:
    def __new__(cls, identifier: Identifier) -> Literal: ...

class Namespace:
    def __new__(cls, url: str) -> Namespace: ...
    def __getattr__(self, key: str) -> URIRef: ...
    def __getitem__(self, key: str, default: Optional[Any] = None) -> URIRef: ...

class URIRef: ...
