uri "http://TurnstileSystem/GenerateCSV" alias gencsv.
import "http://TurnstileSystem/CounterApplication".
import "http://TurnstileSystem/CounterApplicationLLR".
import "http://TurnstileSystem/CounterApplicationRequirements".
import "http://TurnstileSystem/CounterApplicationTesting".
import "http://TurnstileSystem/CounterApplicationUnitTesting".
import "http://TurnstileSystem/HazardAssesment". //rename HazardAssesment.sadl file to correct spelling
import "http://TurnstileSystem/InGateRequirement". //rename as we use InGateRequirements.sadl and in it we have InGateRequirement
import "http://TurnstileSystem/Turnstiles".

// directly importing all files, even if some are being imported by other files

// list all SYSTEM
Write: data
{
  Ask: "select distinct ?systemId ?partOfId ?producedById ?providesId ?requiresId where
       {?SYSTEM <rdf:type> <SYSTEM>
        . ?SYSTEM <uniqueIdentifier> ?systemId
        . OPTIONAL{?SYSTEM <partOf> ?partOf . ?partOf <uniqueIdentifier> ?partOfId}
        . OPTIONAL{?SYSTEM <sys:producedBy> ?producedBy . ?producedBy <uniqueIdentifier> ?producedById}
        . OPTIONAL{?SYSTEM <provides> ?provides . ?provides <uniqueIdentifier> ?providesId}
        . OPTIONAL{?SYSTEM <requires> ?requires . ?requires <uniqueIdentifier> ?requiresId}
       } order by ?systemId".
} to "models/TurnstileSystem/Data/SYSTEM.csv".

// list all INTERFACE; note we do not have uniqueIdentifier related to "identifiedBy"
Write: data
{
  Ask: "select distinct ?uniqueIdentifier ?sourceId ?destinationId ?identifiedBy where
       {  ?INTERFACE <rdf:type> <INTERFACE>
        . ?INTERFACE <uniqueIdentifier> ?uniqueIdentifier
        . OPTIONAL{?INTERFACE <sys:source> ?source . ?source <uniqueIdentifier> ?sourceId}
        . OPTIONAL{?INTERFACE <destination> ?destination . ?destination <uniqueIdentifier> ?destinationId}
        . OPTIONAL{?INTERFACE <identifiedBy> ?identifiedBy}
       } order by ?uniqueIdentifier".
} to "models/TurnstileSystem/Data/INTERFACE.csv".

// list all HAZARD
Write: data
{
  Ask: "select distinct ?uniqueIdentifier ?definition ?systemSourceId ?hazardSourceId where
       {  ?HAZARD <rdf:type> <HAZARD> . ?HAZARD <uniqueIdentifier> ?uniqueIdentifier
        . ?HAZARD <definition> ?definition
        . OPTIONAL{?HAZARD <H:source> ?system . ?system <rdf:type> <SYSTEM> . ?system <uniqueIdentifier> ?systemSourceId}
        . OPTIONAL{?HAZARD <H:source> ?hazard . ?hazard <rdf:type> <HAZARD> . ?hazard <uniqueIdentifier> ?hazardSourceId}
       } order by ?uniqueIdentifier".
} to "models/TurnstileSystem/Data/HAZARD.csv".

// list all REQUIREMENT
Write: data
{
  Ask: "select distinct ?uniqueIdentifier ?governsId ?satisfiesId ?mitigatesId ?createdById ?text where
       {  ?REQUIREMENT <rdf:type> <REQUIREMENT>
        . ?REQUIREMENT <uniqueIdentifier> ?uniqueIdentifier
        . OPTIONAL{?REQUIREMENT <Rq:governs> ?governs . ?governs <uniqueIdentifier> ?governsId}
        . OPTIONAL{?REQUIREMENT <Rq:satisfies> ?satisfies . ?satisfies <uniqueIdentifier> ?satisfiesId}
        . OPTIONAL{?REQUIREMENT <Rq:mitigates> ?mitigates . ?mitigates <uniqueIdentifier> ?mitigatesId}
        . OPTIONAL{?REQUIREMENT <Rq:createdBy> ?createdBy . ?createdBy <uniqueIdentifier> ?createdById}
        . OPTIONAL{?REQUIREMENT <text> ?text}
       } order by ?uniqueIdentifier".
} to "models/TurnstileSystem/Data/REQUIREMENT.csv".

// list all DATA_DICTIONARY_TERM
// Note that a single DATA_DICTIONARY_TERM can have multiple providedBy and multiple consumedBy; and so we get multiple rows
Write: data
{
  Ask: "select distinct ?uniqueIdentifier ?requirementProvidedById ?requirementConsumedById ?interfaceProvidedById ?interfaceConsumedById ?createdById ?text where
       {  ?DATA_DICTIONARY_TERM <rdf:type> <DATA_DICTIONARY_TERM>
        . ?DATA_DICTIONARY_TERM <uniqueIdentifier> ?uniqueIdentifier
        . OPTIONAL{?DATA_DICTIONARY_TERM <providedBy> ?req  . ?req <rdf:type> <REQUIREMENT>  . ?req <uniqueIdentifier>  ?requirementProvidedById}
        . OPTIONAL{?DATA_DICTIONARY_TERM <consumedBy> ?req2 . ?req2 <rdf:type> <REQUIREMENT> . ?req2 <uniqueIdentifier> ?requirementConsumedById}
        . OPTIONAL{?DATA_DICTIONARY_TERM <providedBy> ?int  . ?int <rdf:type> <INTERFACE>  . ?int <uniqueIdentifier>  ?interfaceProvidedById}
        . OPTIONAL{?DATA_DICTIONARY_TERM <consumedBy> ?int2 . ?int2 <rdf:type> <INTERFACE> . ?int2 <uniqueIdentifier> ?interfaceConsumedById}
        . OPTIONAL{?DATA_DICTIONARY_TERM <mitigates> ?createdBy . ?createdBy <uniqueIdentifier> ?createdById}
        . OPTIONAL{?DATA_DICTIONARY_TERM <text> ?text}
      } order by ?uniqueIdentifier".
} to "models/TurnstileSystem/Data/DATA_DICTIONARY_TERM.csv".

// list all TEST
Write: data
{
  Ask: "select distinct ?uniqueIdentifier ?verifies ?producedBy where
       {  ?TEST <rdf:type> <TEST>
        . ?TEST <uniqueIdentifier> ?uniqueIdentifier
        . OPTIONAL{?TEST <verifies> ?verifies . ?verifies <uniqueIdentifier> ?verifiesId}
        . OPTIONAL{?TEST <tst:producedBy> ?producedBy . ?producedBy <uniqueIdentifier> ?producedById}
       } order by ?uniqueIdentifier".
} to "models/TurnstileSystem/Data/TEST.csv".

// list all FORMAT
Write: data
{
  Ask: "select distinct ?uniqueIdentifier where
        {  ?FORMAT <rdf:type> <FORMAT>
         . ?FORMAT <uniqueIdentifier> ?uniqueIdentifier
        } order by ?uniqueIdentifier".
} to "models/TurnstileSystem/Data/FORMAT.csv".

// list test results; TEST_EXECUTION does not have unique identifier
Write: data
{
   Ask: "select ?uniqueIdentifier ?tcId ?result ?testExe where
         {  ?tr <rdf:type> <TEST_RESULT>
          . ?tr <uniqueIdentifier> ?uniqueIdentifier
          . ?tr <confirms> ?tc . ?tc <uniqueIdentifier> ?tcId
          . ?tr <result> ?result
          . ?tr <executedBy> ?testExe
         } order by ?testExe ?uniqueIdentifier".
} to "models/TurnstileSystem/Data/TEST_RESULTS.csv".

// list all AGENT
Write: data
{
  Ask: "select distinct ?uniqueIdentifier where
        {  ?AGENT <rdf:type> <AGENT>
         . ?AGENT <uniqueIdentifier> ?uniqueIdentifier
        } order by ?uniqueIdentifier".
} to "models/TurnstileSystem/Data/AGENT.csv".

// list all COMPILE
Write: data
{
  Ask: "select distinct ?uniqueIdentifier ?performedById ?usedId where
        {  ?COMPILE <rdf:type> <COMPILE>
         . ?COMPILE <uniqueIdentifier> ?uniqueIdentifier
         . OPTIONAL{  ?COMPILE <performedBy> ?performedBy
                    . ?performedBy <rdf:type> <AGENT>
                    . ?performedBy <uniqueIdentifier> ?performedById
                   }
         . OPTIONAL{  ?COMPILE <used> ?used
                    . ?used <rdf:type> <ENTITY>
                    . ?used <uniqueIdentifier> ?usedId
                   }
        } order by ?uniqueIdentifier".
} to "models/TurnstileSystem/Data/COMPILE.csv".

// list all PACKAGE
Write: data
{
  Ask: "select distinct ?uniqueIdentifier ?performedById ?usedId where
        {  ?PACKAGE <rdf:type> <PACKAGE>
         . ?PACKAGE <uniqueIdentifier> ?uniqueIdentifier
         . OPTIONAL{  ?PACKAGE <performedBy> ?performedBy
         . ?performedBy <rdf:type> <AGENT>
         . ?performedBy <uniqueIdentifier> ?performedById
        }
        . OPTIONAL{  ?PACKAGE <used> ?used
                   . ?used <rdf:type> <ENTITY>
                   . ?used <uniqueIdentifier> ?usedId
                  }
        } order by ?uniqueIdentifier".
} to "models/TurnstileSystem/Data/PACKAGE.csv".

// list all FILE
Write: data
{
  Ask: "select distinct ?uniqueIdentifier ?createById ?formatId where
        {  ?FILE <rdf:type> <FILE>
         . ?FILE <uniqueIdentifier> ?uniqueIdentifier
         . OPTIONAL{  ?FILE <createBy> ?createBy
                    . ?createBy <rdf:type> <ACTIVITY>
                    . ?createBy <uniqueIdentifier> ?createById
                   }
         . OPTIONAL{  ?FILE <fileFormat> ?format
                    . ?format <rdf:type> <FORMAT>
                    . ?format <uniqueIdentifier> ?formatId
                    }
        } order by ?uniqueIdentifier".
} to "models/TurnstileSystem/Data/FILE.csv".