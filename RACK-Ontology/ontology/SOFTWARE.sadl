/* Copyright (c) 2020, General Electric Company, Galois, Inc.
 *
 * All Rights Reserved
 *
 * This material is based upon work supported by the Defense Advanced Research
 * Projects Agency (DARPA) under Contract No. FA8750-20-C-0203.
 *
 * Any opinions, findings and conclusions or recommendations expressed in this
 * material are those of the author(s) and do not necessarily reflect the views
 * of the Defense Advanced Research Projects Agency (DARPA).
 */

uri "http://arcos.rack/SOFTWARE" alias sw.
import "http://arcos.rack/PROV-S".
import "http://arcos.rack/FILE".
import "http://arcos.rack/AGENTS".

CODE_DEVELOPMENT
	(note "An ACTIVITY that produces source code FILEs")
	is a type of FILE_CREATION.

    author (note "AGENT(s) who participated in this ACTIVITY") describes CODE_DEVELOPMENT with values of type AGENT.
    author is a type of wasAssociatedWith.

    referenced (note "ENTITY(s) (e.g. REQUIREMENT) that were referenced during this ACTIVITY") describes CODE_DEVELOPMENT with values of type ENTITY.
    referenced is a type of used.

    governedBy (note "ENTITY(s) (e.g. REQUIREMENT) that gave rise to this ACTIVITY") describes CODE_DEVELOPMENT with values of type ENTITY.
    governedBy is a type of used.

BUILD
	(note "Describes a set of ACTIVITYs (e.g. CODE_GEN, COMPILE, ...) that together form some logical building unit")
	is a type of FILE_CREATION.
    step (note "A BUILD may be comprised of any number of sub-ACTIVITY(s)") describes BUILD with values of type ACTIVITY.
    step is a type of wasInformedBy.

CODE_GEN
	(note "ACTIVITY of running a CODE_GENERATOR to create source code FILEs")
	is a type of FILE_CREATION.
    sw:performedBy (note "AGENT(s) (e.g. CODE_GENERATOR) generating the code") describes CODE_GEN with values of type AGENT. 
    sw:performedBy is a type of wasAssociatedWith.

COMPILE
	(note "ACTIVITY of running a a COMPILER to produce executable and object FILEs")
	is a type of FILE_CREATION.
    sw:performedBy (note "AGENT(s) (e.g. COMPILER) performing the compilation") describes COMPILE with values of type AGENT. 
    sw:performedBy is a type of wasAssociatedWith.
    
    
    compiledBy (note "The tool that performed the compilation") describes COMPILE with values of type TOOL.
    compiledBy is a type of wasAssociatedWith.
    
    compileInput (note "Source files that contributed to the compilation") describes COMPILE with values of type FILE.
    compileInput is a type of used.

PACKAGE
	(note "ACTIVITY of running a PACKAGER to produce a package FILE")
	is a type of FILE_CREATION.

    sw:performedBy (note "AGENT(s) (e.g. PACKAGER) performing the packaging") describes PACKAGE with values of type AGENT.
    sw:performedBy of PACKAGE must be one of {Ag:PERSON, Ag:ORGANIZATION}.
    sw:performedBy is a type of wasAssociatedWith.

	packagedBy (note "The tool used to generate the package output") describes PACKAGE with values of type TOOL.
	packagedBy is a type of wasAssociatedWith.

	packageInput (note "Source files used when generating the package output") describes PACKAGE with values of type FILE.
	packageInput is a type of used.

COMPONENT_TYPE
    (note "An open/extensible set of types of software components")
    is a type of THING.

// A few common instances:
SOURCE_FUNCTION
    (note "A function or procedure declared or defined in source code.")
    is a COMPONENT_TYPE
    has identifier "SOURCE_FUNCTION".
BINARY_FUNCTION
    (note "A function in a binary, as defined by the appropriate ABI.")
    is a COMPONENT_TYPE
    has identifier "BINARY_FUNCTION".
SOURCE_GLOBAL_VARIABLE
    (note "A global variable declared or defined in source code.")
    is a COMPONENT_TYPE
    has identifier "SOURCE_GLOBAL_VARIABLE".
BINARY_GLOBAL_VARIABLE
    (note "A global variable (generally in the .data or .bss sections).")
    is a COMPONENT_TYPE
    has identifier "BINARY_GLOBAL_VARIABLE".
BINARY_BASIC_BLOCK
    (note "A basic block at the binary level.")
    is a COMPONENT_TYPE
    has identifier "BINARY_BASIC_BLOCK".
CLASS_DEFINITION
    (note "A class in an object-oriented language.")
    is a COMPONENT_TYPE
    has identifier "CLASS".
CLASS_METHOD
    (note "A method attached to a class in an object-oriented language.")
    is a COMPONENT_TYPE
    has identifier "CLASS_METHOD".
CLASS_MEMBER_VARIABLE
    (note "A variable attached to the instances of a class in an object-oriented language.")
    is a COMPONENT_TYPE
    has identifier "CLASS_MEMBER_VARIABLE".
CLASS_CONSTRUCTOR
    (note "A constructor in an object-oriented language.")
    is a COMPONENT_TYPE
    has identifier "CLASS_CONSTRUCTOR".
MODULE
    (note "A collection of related code, usually grouped in a lexical scope.")
    is a COMPONENT_TYPE
    has identifier "MODULE".
NAMESPACE
    (note "A collection of related code, usually grouped in a lexical scope.")
    is a COMPONENT_TYPE
    has identifier "NAMESPACE".

SWCOMPONENT
    (note "A concrete software component")
    is a type of ENTITY.

    componentType (note "Type of component")
        describes SWCOMPONENT with a single value of type COMPONENT_TYPE.

    valueType (note "The type of this value, if applicable (e.g. for functions or variables).")
        describes SWCOMPONENT with values of type string.

    /* How components relate to each other */

    mentions (note "A component referenced by this one, e.g., a callee or variable being used.")
        describes SWCOMPONENT with values of type SWCOMPONENT.

    subcomponentOf (note "A structural sub-component, e.g., a function might be a subcomponent of module.")
        describes SWCOMPONENT with values of type SWCOMPONENT.

    /* How components relate to the system as a whole */

    instantiates (note "What logical component (system) does this physical component (code) instantiate or implement?")
        describes SWCOMPONENT with values of type ENTITY. 
