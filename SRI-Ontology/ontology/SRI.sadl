
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// DesCert Ontology
// Copyright 2021. Honeywell International and SRI International

// namespace and imports
uri "http://arcos.descert/SRI" alias DesCert.
import "http://arcos.rack/PROV-S".
import "http://arcos.rack/DOCUMENT".
import "http://arcos.rack/SYSTEM".
import "http://arcos.rack/SOFTWARE".
import "http://arcos.rack/REQUIREMENTS".
// import "http://arcos.rack/REVIEW".
import "http://arcos.rack/TESTING".
import "http://arcos.rack/HAZARD".
import "http://arcos.rack/ANALYSIS".
import "http://arcos.rack/PROCESS".
import "http://arcos.rack/AGENTS".
import "http://arcos.rack/MODEL".
// import "http://common/DO-178C".
import "http://arcos.AH-64D/Boeing".

       // TOOL is defined in the main RACK ontology as an AGENT
       // relevant properties inherited from AGENT and TOOL: 
       //   identifier
       //   title - name of tool
       //   toolVersion
       // NOTE: actedOnBehalfOf property of AGENT is not used 
       // We are adding more properties to TOOL here
// DB: renamed SRI_Tool to DesCert_Tool	   
DesCert_Tool is a type of TOOL. // DB: renamed to DesCert_Tool
//     toolSummaryDescription (note "concise description of tool function, inputs, outputs") describes SRI_Tool with a single value of type string.
         // note: we don't want to subtype description from THING since it is intended for a different purpose and cardinality of description is "at most 1"
       userGuide describes DesCert_Tool with values of type DOCUMENT. 
       toolQualificationData describes DesCert_Tool with values of type ToolQualificationData.
       toolQualificationData describes DesCert_Tool with at most 1 value.
       // DB: wasQualifiedBy is now in ToolQualificationData
       //  wasQualifiedBy of DesCert_Tool only has values of type ORGANIZATION.

//      ToolInvocationInstance (note "the instance of tool execution") is a type of ENTITY.
//        toolParameters (note "all parameters/options used to run the tool") describes ToolInvocationInstance with values of type string.
//        // new relationships:
//        toolUsed (note "the tool that is invoked") describes ToolInvocationInstance with a single value of type TOOL.
//        toolUsed is a type of wasAttributedTo.
//        invokedBy (note "person or DevOps invoking the tool") describes ToolInvocationInstance with values of type AGENT.
//        invokedBy is a type of wasAttributedTo.

ToolQualificationData
        (note "tool qualification evidence including tool qualification plan, tool operational requirements, and tool verification procedures")
      is a type of ENTITY.
       // relevant properties inherited from ENTITY:
       //   identifier
       //   generatedAtTime
       // relationships inherited from ENTITY that are subtyped:

	   toolQualificationSummary (note "summary of tool qualification argument and roadmap of artifacts") describes ToolQualificationData with values of type string.
       toolQualificationSummary describes ToolQualificationData with at most 1 value.
       toolQualificationArtifacts (note "consist of multiple documents") describes ToolQualificationData with values of type DOCUMENT.
       // note: each DOCUMENT in toolQualificationArtifacts is a collection of FILES (or other entities) that have same version or related provenance
     
     ////////////////////////////////////////////////
     // Analysis and properties
     
      // ANALYSIS_OUTPUT is defined in the base RACK ontology as an ENTITY
      // relevant properties inherited from ANALYSIS_OUTPUT
      //   analyzes is not used since goalProperty captures the information
      //   result of type ANALYSIS_RESULT defined in the base RACK ontology is used as is
      // new properties for ANALYSIS_OUTPUT
      
      // Note: base RACK ontology class ANALYSIS_ANNOTATION is not used since we capture the property independently and not as part of ANALYSIS_OUTPUT
     
     // DB: suggest moving this in core ontology since SpecificProperty is quite generic for everyone
      SpecificProperty is a type of PROPERTY.
         propertyBasis (note "entity impacting the property definition - e.g. SystemconOps") describes SpecificProperty with values of type ENTITY.
         propertyBasis is a type of wasImpactedBy.
         // NOTE: a SpecificProperty is modeled by entities such as SallyPropertyModel; that's where the property text is contained
         
     ////////////////////////////////////////////////
     // System architecture and analysis
   
     RadlNotation (note "RADL notation for architecture specification") is a type of ENTITY.
        userGuide describes RadlNotation with values of type DOCUMENT.
        semantics describes RadlNotation with values of type DOCUMENT.
        
     RadlArchitectureModel (note "The model of architecture in Radl") is a type of MODEL.
        radlArchitectureNotation describes RadlArchitectureModel with a single value of type RadlNotation. 
        radlArchitectureNotation is a type of wasImpactedBy.
        radlSpecification (note "the Radl specification text") describes RadlArchitectureModel with a single value of type string.
        models of RadlArchitectureModel only has values of type SystemArchitecture.

      RadlGenericProperty is a type of PROPERTY.
        scopeOf of RadlGenericProperty only has values of type RadlArchitectureModel.

	ConfigurationString is a type of ENTITY.
      
      RadlerArchitectureAnalysis (note "Analysis done by Radler tool on Radl architecture specificaton (SystemArchitecture)") is a type of ANALYSIS.
        // Inherited properties from ANALYSIS
        //   performedBy - refers to Radler tool
        analysisConfiguration of RadlerArchitectureAnalysis only has values of type ConfigurationString.
	    analysisInput of RadlerArchitectureAnalysis only has values of type {RadlArchitectureModel or RadlGenericProperty}. 
      
      ///////////////////////////////////////////////////
      // System, Software requirements, design, code   

    SystemRequirementSet is a type of COLLECTION.
       content of SystemRequirementSet only has values of type PIDS_Req.
       wasGeneratedBy of SystemRequirementSet only has values of type SystemRequirementsDefinition. 
       rq:governs describes SystemRequirementSet with values of type SYSTEM.
       
    SoftwareHighLevelRequirementSet is a type of COLLECTION.
       content of SoftwareHighLevelRequirementSet only has values of type SRS_Req.
       wasGeneratedBy of SoftwareHighLevelRequirementSet only has values of type SoftwareHighLevelRequirementsDefinition.
       Rq:governs of SoftwareHighLevelRequirementSet only has values of type SWCOMPONENT. 	   

    SoftwareLowLevelRequirementSet is a type of COLLECTION.
       content of SoftwareLowLevelRequirementSet only has values of type SubDD_Req.
	   wasGeneratedBy of SoftwareLowLevelRequirementSet only has values of type SoftwareDesign. 
       Rq:governs of SoftwareLowLevelRequirementSet only has values of type SWCOMPONENT. 
       Rq:governs describes SoftwareLowLevelRequirementSet with at most 1 value.
       
      ClearNotation (note "CLEAR notation for writing requirements") is a type of ENTITY.
        userGuide describes ClearNotation with values of type DOCUMENT.
        semantics describes ClearNotation with values of type DOCUMENT.
          
      DesCertRequirementModel (note "The model of requirement in DesCert in CLEAR notation") is a type of MODEL.
        requirementNotation describes DesCertRequirementModel with a single value of type ClearNotation. 
        requirementNotation is a type of wasImpactedBy.
        requirementText describes DesCertRequirementModel with a single value of type string. 
        models of DesCertRequirementModel only has values of type {SRS_Req or SubDD_Req}.

      SourceCode is a type of FILE.
        wasGeneratedBy of SourceCode only has values of type SoftwareCoding.
        
      ObjectFile is a type of FILE.
        wasGeneratedBy of ObjectFile only has values of type SoftwareIntegration. 

		SoftwareIntegration is a type of COMPILE.
        wasInformedBy of SoftwareIntegration only has values of type SoftwareCoding.       
        compileWithOptimizations describes  SoftwareIntegration with values of type boolean.    
        linkerPath describes  SoftwareIntegration with values of type string.      
     
      DataDictionary is a type of COLLECTION.
        //  allow a whole dictionary of terms to be traced as a unit rather than each term individually
        wasGeneratedBy of DataDictionary only has values of type SoftwareHighLevelRequirementsDefinition.
        content of DataDictionary only has values of type DATA_DICTIONARY_TERM.

      ExecutableObject is a type of FILE.
      
      ///////////////////////////////////////////
      // Analysis done by Sally tool
      
      SallyTransitionSystemModel is a type of ENTITY.
        // inherited properties
        //   generatedAtTime
        //   wasDerivedFrom refers to a requirement set that this model was generated from
        //   wasImpactedBy refers to dictionary entities used
        //   wasGeneratedBy refers to ACTIVITY that generated this
        
        // DB: added range constraint on wasDerivedfrom
        wasDerivedFrom of SallyTransitionSystemModel only has values of type {SoftwareHighLevelRequirementSet or SoftwareLowLevelRequirementSet}. 
        // new relationships:
        sallyModelContents describes SallyTransitionSystemModel with values of type FILE.
        sallyModelNotation describes SallyTransitionSystemModel with a single value of type SallyNotation. 
        sallyModelNotation is a type of wasImpactedBy.
      
      SallyTransitionSystemModelGeneration is a type of ACTIVITY.
	    analysisConfiguration of SallyTransitionSystemModelGeneration only has values of type ConfigurationString.
//        analyzedWith  describes SallyTransitionSystemModelGeneration with a single value of type TOOL.
//        runBy describes SallyTransitionSystemModelGeneration with values of type AGENT.
	    analysisInput of SallyTransitionSystemModelGeneration only has values of type {SoftwareHighLevelRequirementSet or SoftwareLowLevelRequirementSet}. 
      
      SallyModelChecking is a type of ANALYSIS.
        // Inherited properties from ANALYSIS
        //   performedBy - refers to SALLY tool
        // Inherited from ACTIVITY:
        //   wasInformedBy: activity that was a precursor to this
        analysisInput of SallyModelChecking only has values of type {SallyTransitionSystemModel or SpecificProperty}.        
        analysisConfiguration of SallyTransitionSystemModelGeneration only has values of type ConfigurationString.
      
      SallyNotation (note "Sally notation for creating models and property queries") is a type of ENTITY.
        userGuide describes SallyNotation with values of type DOCUMENT.
        semantics describes SallyNotation with values of type DOCUMENT.
      
      SallyPropertyModel (note "the MODEL class that is used to model a SpecificProperty") is a type of MODEL.
        // this entity models a SpecificProperty that is checked by Sally
        sallyPropertyNotation describes SallyPropertyModel with a single value of type SallyNotation. 
        sallyPropertyNotation is a type of wasImpactedBy.
        sallyPropertySpecification (note "the property content/text") describes SallyPropertyModel with a single value of type string.
        // inherited property
        models of SallyPropertyModel only has values of type SpecificProperty. 

       /////////////////////////////////////////////////////////////////////////
       // Test Oracle and Test generation by Text2Test tool from CLEAR requirements
       
       ClearTestAndOracleGeneration is a type of TEST_DEVELOPMENT.
         // Test oracles and test generation by Text2Test tool from CLEAR requirements
        // Inherited properties
        //   developedBy: refers to Text2Test tool
        //   wasInformedBy: activity that was a precursor to this
		used of ClearTestAndOracleGeneration only has values of type {SoftwareHighLevelRequirementSet or SoftwareLowLevelRequirementSet or DataDictionary}.
         
       ClearTestingTheory is a type of ENTITY. 
          testingTheoryDoc describes ClearTestingTheory with values of type DOCUMENT. 
       
       TestOracle (note "a test obligation") is a type of ENTITY. // DB: added note
		 verifies of TestOracle only has values of type REQUIREMENT. 
		 verifies describes TestOracle with exactly 1 value. 		 
         requirementSubclause (note "part (subclause) of the requirement this test oracle tests") describes TestOracle with values of type string.
         testOracleCriteria (note "e.g., equiv class, boundary value") describes TestOracle with a single value of type string.
         testOracleTheory describes TestOracle with a single value of type ClearTestingTheory.
         // Inherited properties:
         //   title: a name for the TestOracle that is more descriptive than the identifier
         
       // TEST class in RACK base ontology is extended with further properties
       // Inherited properties
       //    title - name of the test that can be looked up in the testVectorFile
       //    verifies refers to TestOracle
       // New properties

       // TEST_EXECUTION class in RACK base ontology is extended with further attributes
       // New attributes
//	   testEnvironment (note "test environment description, configuration parameters") describes TEST_EXECUTION with values of type ENTITY.
//     testEnvironment describes TEST_EXECUTION with at most 1 value.                   
       // TEST_RESULT class in RACK base ontology is used as is
       
       ///////////////////////////////////////////////////////////////////////
       // Requirement analysis by Text2Test tool from CLEAR requirements
       
       ClearGenericProperty is a type of PROPERTY.
	   scopeOf of ClearGenericProperty only has values of type {SoftwareHighLevelRequirementSet or SoftwareLowLevelRequirementSet}. 

       ClearRequirementAnalysis is a type of ANALYSIS.
        // Inherited properties from ANALYSIS
        //   performedBy - refers to Text2Test tool
        //toolInvocation describes RequirementAnalysis with values of type ToolInvocationInstance.
        //toolInvocation describes RequirementAnalysis with at most 1 value.
        // Inherited from ACTIVITY:
        //   wasInformedBy: activity that was a precursor to this
       analysisInput of ClearRequirementAnalysis must be one of  {DataDictionary, ClearGenericProperty, SoftwareHighLevelRequirementSet, SoftwareLowLevelRequirementSet}.
      
       ////////////////////////////////
       // Test generation by Randoop tool
       
       RandoopJUnitTestGeneration is a type of TEST_DEVELOPMENT.
      // Inherited properties
        //   developedBy: refers to Randoop tool
        //   wasInformedBy: activity that was a precursor to this
	   used of RandoopJUnitTestGeneration only has values of type SourceCode.
       
       // DB: changed to inherit from TEST rather than ENTITY
       RandoopTestsAndMetrics
          (note "the set of JUNIT tests/results generated and executed by Randoop with corresponding test classification metrics")
       is a type of TEST.
        // inherited properties:
        //   identifier
        //   generatedAtTime
        // new properties:
        totalNumberOfTestCases (note "size of test set") describes RandoopTestsAndMetrics with a single value of type int.
        numberOfRegressionTestCases (note "tests that pass on the code and should continue to pass on regressions") describes RandoopTestsAndMetrics with a single value of type int.
        numberOfViolationInducingTestCases (note "tests that indicate a method contract violation") describes RandoopTestsAndMetrics with a single value of type int.
        numberOfReducedViolationInducingTestCases (note "numberOfViolationInducingTestCases reduced by filtering out redundant test cases in the same equivalance class") describes RandoopTestsAndMetrics with a single value of type int.
        numberOfErrorRevealingTestCases (note "tests that were determined to reveal actual errors in code") describes RandoopTestsAndMetrics with a single value of type int.
        verifies of RandoopTestsAndMetrics only has values of type SourceCode.
        
        /////////////////////////////////////////////
        // Invariant detection by Daikon
        
        // DB: inherit from ANALYSIS rather than ACTIVITY
        DaikonInvariantDetection is a type of ANALYSIS.
          // Inherited porperties
          //   developedBy: refers to Randoop tool
          //   wasInformedBy: activity that was a precursor to this
        analysisConfiguration of DaikonInvariantDetection only has values of type ConfigurationString.
 
		analyzedWith of DaikonInvariantDetection only has values of type TOOL. 
		analyzedWith describes DaikonInvariantDetection with exactly 1 value. 

        analysisInput of DaikonInvariantDetection only has values of type {SourceCode or RandoopTestsAndMetrics}. 
          
        DaikonInvariantOutput is a type of ENTITY.
          // inherited properties from ENTITY:
          //   identifier
          //   generatedAtTime
          //   wasImpactedBy of DaikonInvariantOutput has values of type RandoopTestsAndMetrics.
          // new properties:
          DesCert:verifies describes DaikonInvariantOutput with values of type SourceCode.
          // DB: removed producedBy since wasGeneratedBy is sufficient
          // DesCert:producedBy describes DaikonInvariantOutput with values of type DaikonInvariantDetection.
          // DesCert:producedBy describes DaikonInvariantOutput with at most 1 value.
          wasGeneratedBy of DaikonInvariantOutput only has values of type DaikonInvariantDetection.
          invariantCount describes DaikonInvariantOutput with a single value of type int.
          classesCount describes DaikonInvariantOutput with a single value of type int.
          testsCount describes DaikonInvariantOutput with a single value of type int.
          supportFiles describes DaikonInvariantOutput with values of type FILE.
          testDriver describes DaikonInvariantOutput with values of type FILE.
          likelyInvariants describes DaikonInvariantOutput with values of type SpecificProperty.
        
        LikelyInvariantModel (note "model of invariant detected by Daikon") is a type of MODEL.
          invariantSpecification (note "the likely invariant text") describes LikelyInvariantModel with a single value of type string.
          // inherited property
          models of LikelyInvariantModel only has values of type SpecificProperty.
