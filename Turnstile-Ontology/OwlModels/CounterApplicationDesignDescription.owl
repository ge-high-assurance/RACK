<rdf:RDF
    xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
    xmlns:builtinfunctions="http://sadl.org/builtinfunctions#"
    xmlns:j.0="http://arcos.rack/AGENTS#"
    xmlns:sadlimplicitmodel="http://sadl.org/sadlimplicitmodel#"
    xmlns:j.1="http://Turnstile/DevelopmentPlan#"
    xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
    xmlns:sadlbasemodel="http://sadl.org/sadlbasemodel#"
    xmlns:j.2="http://arcos.rack/REQUIREMENTS#"
    xmlns:cntrappllr="http://Turnstile/CounterApplicationDesignDescription#"
    xmlns:trnstldpd="http://Turnstile/DevelopmentPlanData#"
    xmlns:j.3="http://arcos.rack/PROV-S#"
    xmlns:j.4="http://arcos.rack/SYSTEM#"
    xmlns:owl="http://www.w3.org/2002/07/owl#"
    xmlns:cntrapprq="http://Turnstile/CounterApplicationRequirementSpec#"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema#"
  xml:base="http://Turnstile/CounterApplicationDesignDescription">
  <owl:Ontology rdf:about="">
    <owl:imports rdf:resource="CounterApplicationRequirementSpec"/>
    <owl:imports rdf:resource="DevelopmentPlanData"/>
    <owl:imports rdf:resource="http://sadl.org/builtinfunctions"/>
    <owl:imports rdf:resource="http://sadl.org/sadlimplicitmodel"/>
    <owl:imports rdf:resource="http://sadl.org/sadlbasemodel"/>
    <rdfs:comment xml:lang="en">This ontology was created from a SADL file 'CounterApplicationDesignDescription.sadl' and should not be directly edited.</rdfs:comment>
  </owl:Ontology>
  <j.1:DataAndControlCouple rdf:ID="DCC-6">
    <j.2:createdBy>
      <j.1:SoftwareDesign rdf:ID="LlrDev1">
        <j.2:referenced rdf:resource="DevelopmentPlanData#SoftwareStandard"/>
        <j.2:author>
          <j.1:Engineer rdf:ID="JaneDoe">
            <j.0:employedBy rdf:resource="DevelopmentPlanData#General_Electric"/>
            <j.0:emailAddress>jane.doe@ge.com</j.0:emailAddress>
            <j.3:title>Doe, Jane</j.3:title>
            <j.3:identifier>2125895152</j.3:identifier>
          </j.1:Engineer>
        </j.2:author>
        <j.3:identifier>LlrDev1</j.3:identifier>
      </j.1:SoftwareDesign>
    </j.2:createdBy>
    <j.2:providedBy>
      <j.1:LowLevelRequirement rdf:ID="IN-LLR-6">
        <j.2:createdBy rdf:resource="#LlrDev1"/>
        <j.2:governs>
          <j.1:SoftwareThread rdf:about="DevelopmentPlanData#InputThread">
            <j.4:producedBy>
              <j.1:SoftwareDesign rdf:ID="SwDesign">
                <j.2:referenced rdf:resource="DevelopmentPlanData#SoftwareStandard"/>
                <j.2:author rdf:resource="#JaneDoe"/>
                <j.3:identifier>SwDesign</j.3:identifier>
              </j.1:SoftwareDesign>
            </j.4:producedBy>
            <j.4:partOf rdf:resource="DevelopmentPlanData#CounterApplication"/>
            <j.3:identifier>InputThread</j.3:identifier>
          </j.1:SoftwareThread>
        </j.2:governs>
        <j.3:description>Input Thread shall print 'Limit Exceeded'' to the console when a valid UDP message is received and the park_count range is exceed.</j.3:description>
        <j.3:identifier>IN-LLR-6</j.3:identifier>
      </j.1:LowLevelRequirement>
    </j.2:providedBy>
    <j.2:providedBy>
      <j.1:LowLevelRequirement rdf:ID="IN-LLR-5">
        <j.2:createdBy rdf:resource="#LlrDev1"/>
        <j.2:governs rdf:resource="DevelopmentPlanData#InputThread"/>
        <j.3:description>Input Thread shall print 'Invalid Message' to the console when a invalid UDP message is received.</j.3:description>
        <j.3:identifier>IN-LLR-5</j.3:identifier>
      </j.1:LowLevelRequirement>
    </j.2:providedBy>
    <j.2:providedBy>
      <j.1:LowLevelRequirement rdf:ID="EXE-LLR-3">
        <j.2:createdBy rdf:resource="#LlrDev1"/>
        <j.2:governs>
          <j.1:SoftwareThread rdf:about="DevelopmentPlanData#ExecutiveThread">
            <j.4:producedBy rdf:resource="#SwDesign"/>
            <j.4:partOf rdf:resource="DevelopmentPlanData#CounterApplication"/>
            <j.3:identifier>ExecutiveThread</j.3:identifier>
          </j.1:SoftwareThread>
        </j.2:governs>
        <j.3:description>Executive shall print a single '.' character to the console every second when running.</j.3:description>
        <j.3:identifier>EXE-LLR-3</j.3:identifier>
      </j.1:LowLevelRequirement>
    </j.2:providedBy>
    <j.3:description>console</j.3:description>
    <j.3:identifier>DCC-6</j.3:identifier>
  </j.1:DataAndControlCouple>
  <j.1:DataAndControlCouple rdf:ID="DCC-5">
    <j.2:createdBy rdf:resource="#LlrDev1"/>
    <j.2:providedBy>
      <j.1:LowLevelRequirement rdf:ID="OUT-LLR-2">
        <j.2:createdBy rdf:resource="#LlrDev1"/>
        <j.2:governs>
          <j.1:SoftwareThread rdf:about="DevelopmentPlanData#OutputThread">
            <j.4:producedBy rdf:resource="#SwDesign"/>
            <j.4:partOf rdf:resource="DevelopmentPlanData#CounterApplication"/>
            <j.3:identifier>OutputThread</j.3:identifier>
          </j.1:SoftwareThread>
        </j.2:governs>
        <j.2:satisfies rdf:resource="CounterApplicationRequirementSpec#HLR-3"/>
        <j.3:description>Output Thread shall broadcast a UDP message on port 62001 with the park_count every second.</j.3:description>
        <j.3:identifier>OUT-LLR-2</j.3:identifier>
      </j.1:LowLevelRequirement>
    </j.2:providedBy>
    <j.3:description>outgoing UDP message</j.3:description>
    <j.3:identifier>DCC-5</j.3:identifier>
  </j.1:DataAndControlCouple>
  <j.1:DataAndControlCouple rdf:ID="DCC-4">
    <j.2:createdBy rdf:resource="#LlrDev1"/>
    <j.2:providedBy>
      <j.1:LowLevelRequirement rdf:ID="IN-LLR-3">
        <j.2:createdBy rdf:resource="#LlrDev1"/>
        <j.2:governs rdf:resource="DevelopmentPlanData#InputThread"/>
        <j.2:satisfies rdf:resource="CounterApplicationRequirementSpec#HLR-2"/>
        <j.2:satisfies rdf:resource="CounterApplicationRequirementSpec#HLR-1"/>
        <j.3:description>Input Thread shall add the delta value received by the UDP to the park_count and send the updated park_count to the Output Thread when a valid UDP message is received and the park_count range is not exceed.</j.3:description>
        <j.3:identifier>IN-LLR-3</j.3:identifier>
      </j.1:LowLevelRequirement>
    </j.2:providedBy>
    <j.2:providedBy>
      <j.1:LowLevelRequirement rdf:ID="OUT-LLR-1">
        <j.2:createdBy rdf:resource="#LlrDev1"/>
        <j.2:governs rdf:resource="DevelopmentPlanData#OutputThread"/>
        <j.3:description>Output Thread shall initialize the park_count to 0 on powerup.</j.3:description>
        <j.3:identifier>OUT-LLR-1</j.3:identifier>
      </j.1:LowLevelRequirement>
    </j.2:providedBy>
    <j.2:consumedBy rdf:resource="#OUT-LLR-2"/>
    <j.3:description>output_park_count</j.3:description>
    <j.3:identifier>DCC-4</j.3:identifier>
  </j.1:DataAndControlCouple>
  <j.1:DataAndControlCouple rdf:ID="DCC-3">
    <j.2:providedBy>
      <j.1:LowLevelRequirement rdf:ID="IN-LLR-1">
        <j.2:createdBy rdf:resource="#LlrDev1"/>
        <j.2:governs rdf:resource="DevelopmentPlanData#InputThread"/>
        <j.3:description>Input Thread shall initialize the park_count to 0 on powerup.</j.3:description>
        <j.3:identifier>IN-LLR-1</j.3:identifier>
      </j.1:LowLevelRequirement>
    </j.2:providedBy>
    <j.2:providedBy>
      <j.1:LowLevelRequirement rdf:ID="IN-LLR-4">
        <j.2:createdBy rdf:resource="#LlrDev1"/>
        <j.2:governs rdf:resource="DevelopmentPlanData#InputThread"/>
        <j.3:description>Input Thread shall limit park_count to between 0 and 1500.</j.3:description>
        <j.3:identifier>IN-LLR-4</j.3:identifier>
      </j.1:LowLevelRequirement>
    </j.2:providedBy>
    <j.2:consumedBy rdf:resource="#IN-LLR-4"/>
    <j.3:description>input_park_count</j.3:description>
    <j.2:consumedBy>
      <j.1:LowLevelRequirement rdf:ID="IN-LLR-2">
        <j.2:createdBy rdf:resource="#LlrDev1"/>
        <j.2:governs rdf:resource="DevelopmentPlanData#InputThread"/>
        <j.2:satisfies rdf:resource="CounterApplicationRequirementSpec#HLR-2"/>
        <j.2:satisfies rdf:resource="CounterApplicationRequirementSpec#HLR-1"/>
        <j.3:description>Input Thread shall check for a incoming UDP message on port 62000.</j.3:description>
        <j.3:identifier>IN-LLR-2</j.3:identifier>
      </j.1:LowLevelRequirement>
    </j.2:consumedBy>
    <j.2:createdBy rdf:resource="#LlrDev1"/>
    <j.3:identifier>DCC-3</j.3:identifier>
    <j.2:consumedBy rdf:resource="#IN-LLR-5"/>
    <j.2:consumedBy rdf:resource="#IN-LLR-3"/>
    <j.2:consumedBy rdf:resource="#IN-LLR-6"/>
  </j.1:DataAndControlCouple>
  <j.1:DataAndControlCouple rdf:ID="DCC-2">
    <j.2:createdBy rdf:resource="#LlrDev1"/>
    <j.2:consumedBy rdf:resource="#IN-LLR-6"/>
    <j.2:consumedBy rdf:resource="#IN-LLR-5"/>
    <j.2:consumedBy rdf:resource="#IN-LLR-3"/>
    <j.2:consumedBy rdf:resource="#IN-LLR-2"/>
    <j.3:description>incoming UDP message</j.3:description>
    <j.3:identifier>DCC-2</j.3:identifier>
  </j.1:DataAndControlCouple>
  <j.1:DataAndControlCouple rdf:ID="DCC-1">
    <j.2:createdBy rdf:resource="#LlrDev1"/>
    <j.2:consumedBy rdf:resource="#OUT-LLR-1"/>
    <j.2:consumedBy rdf:resource="#IN-LLR-1"/>
    <j.2:consumedBy>
      <j.1:LowLevelRequirement rdf:ID="EXE-LLR-2">
        <j.2:createdBy rdf:resource="#LlrDev1"/>
        <j.2:governs rdf:resource="DevelopmentPlanData#ExecutiveThread"/>
        <j.3:description>Executive shall spawn Output Thread on powerup.</j.3:description>
        <j.3:identifier>EXE-LLR-2</j.3:identifier>
      </j.1:LowLevelRequirement>
    </j.2:consumedBy>
    <j.2:consumedBy>
      <j.1:LowLevelRequirement rdf:ID="EXE-LLR-1">
        <j.2:createdBy rdf:resource="#LlrDev1"/>
        <j.2:governs rdf:resource="DevelopmentPlanData#ExecutiveThread"/>
        <j.3:description>Executive shall spawn Input Thread on powerup.</j.3:description>
        <j.3:identifier>EXE-LLR-1</j.3:identifier>
      </j.1:LowLevelRequirement>
    </j.2:consumedBy>
    <j.3:description>PowerUp</j.3:description>
    <j.3:identifier>DCC-1</j.3:identifier>
  </j.1:DataAndControlCouple>
</rdf:RDF>
