
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// DesCert Ontology for Safety and Security
// Copyright 2021-2022. Honeywell International and SRI International

// namespace and imports
uri "http://arcos.descert/SRI-SS" alias SS.
import "http://arcos.rack/PROV-S".
import "http://arcos.rack/DOCUMENT".
import "http://arcos.rack/SYSTEM".
import "http://arcos.rack/HARDWARE".
import "http://arcos.rack/SOFTWARE".
import "http://arcos.rack/REQUIREMENTS".
import "http://arcos.rack/TESTING".
import "http://arcos.rack/HAZARD".
import "http://arcos.rack/ANALYSIS".
import "http://arcos.rack/PROCESS".
import "http://arcos.rack/AGENTS".
import "http://arcos.rack/MODEL".
import "http://arcos.AH-64D/Boeing".
import "http://arcos.rack/SECURITY".
import "http://arcos.descert/SRI".
   
// core ontology types used:
//  SYSTEM, HWCOMPONENT, SWCOMPONENT, FUNCTION

Port is a type of ENTITY.
   direction describes Port with a single value of type PortDirection.
   
PortDirection (note "input is Rx, output is Tx") is a type of THING.
InputPort is a PortDirection has identifier "Input".
OutputPort is a PortDirection has identifier "Output".
BidirectionalPort is a PortDirection has identifier "Bidirectional".

Guarantee is a type of PROPERTY.
  guaranteeType describes Guarantee with a single value of type GuaranteeType.
  
ComponentGuarantee is a type of Guarantee.
  // Future: need to subset guaranteeType 

InterfaceGuarantee is a type of Guarantee.
  // Future: need to subset guaranteeType

// extensible types of guarantees
GuaranteeType (note "a protocol guarantee on interface or platform gurantee on a HW component") is a type of THING.
LatencyGuarantee is a GuaranteeType
  has identifier "LatencyGuarantee".
JitterGuarantee (note "timing guarantees such as jitter") is a GuaranteeType
  has identifier "JitterGuarantee".
BandwidthGuarantee is a GuaranteeType
  has identifier "BandwidthGuarantee".
EncryptionGuarantee (note "") is a GuaranteeType
  has identifier "EncryptionGuarantee".
AuthenticationGuarantee (note "") is a GuaranteeType
  has identifier "AuthenticationGuarantee".
IntegrityGuarantee (note "") is a GuaranteeType
  has identifier "IntegrityGuarantee".
AvailabilityGuarantee (note "") is a GuaranteeType
  has identifier "AvailabilityGuarantee".
CPUCyclesGuarantee (note "") is a GuaranteeType
  has identifier "CPUCyclesGuarantee".
MemoryAvailablilityGuarantee (note "") is a GuaranteeType
  has identifier "MemoryAvailablilityGuarantee".
SoftwareMemoryUsageGuarantee (note "") is a GuaranteeType
  has identifier "SoftwareMemoryUsageGuarantee".
WCETGuarantee (note "worst case execution time of software") is a GuaranteeType
  has identifier "WCETGuarantee".
   
// note: copied from CPS.sadl that is not ingested in RACK
Pedigree (note "Describes source of a component or interface") is a type of THING.

// A few common instances:
InternallyDeveloped is a Pedigree 
   has identifier "InternallyDeveloped"
   has description "Development is done in house.".
COTS is a Pedigree 
   has identifier "COTS"
   has description "Commercial Off-The-Shelf products that are bought as is".
Sourced is a Pedigree 
   has identifier "Sourced"
   has description "The system is provides by an outside organization.".   

Trustworthiness (note "the trust designation of a component or interface - similar to CPS.sadl") is a type of THING.

Trusted is a Trustworthiness 
   has identifier "Trusted"
   has description "Developed and tested to be secure.". 
Untrusted is a Trustworthiness 
   has identifier "Untrusted"
   has description "May be susceptible to security attacks.".

InterfaceType (note "An open/extensible set of topologies of physical interfaces") is a type of THING.
// note: the identifier "Bus" is taken up by core ontology for something else
BusInterface (note "a bus interface is a connection with multiple communicates data between the components")
    is an InterfaceType has identifier "BusInterface".
EthernetInterface is an InterfaceType has identifier "EthernetInterface".
WirelessInterface is an InterfaceType has identifier "WirelessInterface".

HardwareComponent is a type of HWCOMPONENT.
   // inherited
   //   instantiates values of type ENTITY which we will map to SYSTEM
   port (note "set of ports of this component") describes HardwareComponent with values of type Port.
   // DB 4/20/22: use inherited attribute partOf in core ontology to point to container object
   partOf of HardwareComponent only has values of type HardwareComponent.
   //    old: part (note "set of hw components this component contains") describes HardwareComponent with values of type HardwareComponent. 
//  guarantee describes HardwareComponent with values of type ComponentGuarantee.
   hosts describes HardwareComponent with values of type SoftwareComponent.
   pedigree describes HardwareComponent with values of type Pedigree.
   pedigree describes HardwareComponent with at most 1 value.
   trustworthiness describes HardwareComponent with values of type Trustworthiness.
   trustworthiness describes HardwareComponent with at most 1 value.

// add more hw component types in addtion to those defined in core
Switch (note "provides switching capability between point-to-point links")
    is a HWCOMPONENT_TYPE
    has identifier "Switch".
Actuator (note "provides actuation capability")
    is a HWCOMPONENT_TYPE
    has identifier "Actuator".
Display (note "provides display capability - e.g. a flight display/touchscreen")
    is a HWCOMPONENT_TYPE
    has identifier "Display".
 
SoftwareComponent is a type of SWCOMPONENT.
   // inherited
   //   subcomponentOf 
   //   componentType
   sw:instantiates of SoftwareComponent only has values of type FUNCTION.
//   guarantee describes SoftwareComponent with values of type ComponentGuarantee.
   // DB 4/22/22: use inherited attribute partOf in core ontology to point to container object
   //   old: part (note "set of sw components this component contains") describes SoftwareComponent with values of type SoftwareComponent. 
   partOf of SoftwareComponent only has values of type SoftwareComponent.
   pedigree describes SoftwareComponent with values of type Pedigree.
   pedigree describes SoftwareComponent with at most 1 value.
   trustworthiness describes SoftwareComponent with values of type Trustworthiness.
   trustworthiness describes SoftwareComponent with at most 1 value.
   
KernelAPI
   (note "API call to kernel (RTOS), used by other software components.")
   is a SWCOMPONENT_TYPE
   has identifier "KernelAPI".
DeviceDriver
   (note "software device driver managed by the kernel (RTOS)")
   is a SWCOMPONENT_TYPE
   has identifier "DeviceDriver".

PhysicalInterface is a type of ENTITY.  
   srcPort (note "the source port of this interface") describes PhysicalInterface with values of type Port.
   destPort (note "the destination port of this interface") describes PhysicalInterface with values of type Port.
   protocol describes PhysicalInterface with values of type ENTITY.
   interfaceType describes PhysicalInterface with a single value of type InterfaceType.
   pedigree describes PhysicalInterface with values of type Pedigree.
   pedigree describes PhysicalInterface with at most 1 value.
   trustworthiness describes PhysicalInterface with values of type Trustworthiness.
   trustworthiness describes PhysicalInterface with at most 1 value.
  
VirtualChannel is a type of INTERFACE.
   utlilizes describes VirtualChannel with values of type PhysicalInterface.
   sys:source of VirtualChannel only has values of type SYSTEM. //DB: this may not be needed since range in INTERFACE is SYSTEM
   sys:source describes VirtualChannel with a single value of type SYSTEM.
   sys:destination of VirtualChannel only has values of type SYSTEM. //DB this may not be needed since range in INTERFACE is SYSTEM
  
DataFlow is a type of ENTITY.
   communicatesOver describes DataFlow with a single value of type VirtualChannel.
   SS:source describes DataFlow with a single value of type FUNCTION.
   SS:destination describes DataFlow with values of type FUNCTION.
   
SafetyDesignAssuranceLevel is a type of THING.
DAL_A (note "error in design can result in a catastrophic safety event") 
   is a SafetyDesignAssuranceLevel has identifier "DAL_A".
DAL_B (note "error in design can result in at most a hazardous safety event")
   is a SafetyDesignAssuranceLevel has identifier "DAL_B".
DAL_C (note "error in design can result in at most a major safety event")
   is a SafetyDesignAssuranceLevel has identifier "DAL_C".
DAL_D (note "error in design can result in at most a minor safety event")
   is a SafetyDesignAssuranceLevel has identifier "DAL_D".
DAL_E (note "error in design has no safety impact")
   is a SafetyDesignAssuranceLevel has identifier "DAL_E".

SecurityAssuranceLevel is a type of THING.
SAL_1 (note "NIST/ISA99 - protetction against casual/coincidental violation") is a SecurityAssuranceLevel has identifier "SAL_1".
SAL_2 (note "NIST/ISA99 - protetction against intentional violation using simple means") is a SecurityAssuranceLevel has identifier "SAL_2".
SAL_3 (note "NIST/ISA99 - protetction against intentional violation using sohisticated means") is a SecurityAssuranceLevel has identifier "SAL_3".
SAL_4 (note "NIST/ISA99 - protetction against intentional violation using sohisticated means with extended resources") is a SecurityAssuranceLevel has identifier "SAL_4".

SecurityEnclave (note "a time, space, network partition; used synomymously here with SecurityEnclave") is a type of COLLECTION.
   content of SecurityEnclave only has values of type {HardwareComponent or PhysicalInterface or SoftwareComponent or Port}. 
   dal describes SecurityEnclave with values of type SafetyDesignAssuranceLevel.
   dal describes SecurityEnclave with at most 1 value.
   sal describes SecurityEnclave with values of type SecurityAssuranceLevel.
   sal describes SecurityEnclave with at most 1 value.

SecurityPerimeter is a type of COLLECTION. 
  content of SecurityPerimeter only has values of type SecurityEnclave.
   
Vulnerability is a type of ENTITY.
   mitgatedBy describes Vulnerability with values of type {Control or PROPERTY}.
   mitgatedBy is a type of wasImpactedBy.
   enhancedBy describes Vulnerability with values of type {Control or PROPERTY}.
   enhancedBy is a type of wasImpactedBy.
   recoveredBy describes Vulnerability with values of type {Control or PROPERTY}.
   recoveredBy is a type of wasImpactedBy.
   vulnerabilityTouchPoints describes Vulnerability with values of type ArchitectureTouchPoints.
   cweReference describes Vulnerability with values of type ENTITY. // DB: added a refrence that may not always be populated. DB 4/18/22: fixed copy-paste error
   cweReference is a type of wasImpactedBy.
   
Attacker is a type of AGENT.

Attack is a type of ACTIVITY.
  attacker describes Attack with values of type Attacker.
  attacker is a type of wasAssociatedWith.

AttackAccessVectors is a type of ENTITY.
  wasGeneratedBy of AttackAccessVectors only has values of type Attack.
  attackTouchPoints describes AttackAccessVectors with values of type ArchitectureTouchPoints.
  capecReference describes AttackAccessVectors with values of type ENTITY. // DB: added a refrence that may not always be populated.
  capecReference is a type of wasImpactedBy.
  // other attributes: sequrencing order of attack, duration of attack
  
ArchitectureTouchPoints (note "touch points to architural elements like hardware, component, physical interface, software component, data flows")
    is a type of COLLECTION.
   // Future: constrain content, other attributes
  
// Subclass of CONTROL in core ontology, using title case
Control is a type of CONTROL.
   // DB 4/19/22: removed provedBy since a PropertyResult is proved by a Control rather than a Control proved by a PropertyResult
   mitigatesHazard describes Control with values of type HazardCondition.
   enhancesHazard describes Control with values of type HazardCondition.
   location describes Control with values of type ArchitectureTouchPoints.
   nist_800_53Reference describes Control with values of type ENTITY. // DB: added a refrence that may not always be populated. DB 4/18/22: fixed copy-paste error
   nist_800_53Reference is a type of wasImpactedBy.

// DB: Assuming for now that we can use SECURITY_LABEL identifier such as Integrity for a LossCategory,
//          since LossCategory is a subtype. 
//          Not sure of the SADL semantics here: can parent type's object identifers be used for an object of a subtype?
//    Future: It will be good to define a base type for both LossCategory and SECURITY_LABEL and hen subtype it for these two
LossCategory (note "category of a safety related loss") is a type of SECURITY_LABEL.
   // future: constrain values to exclude confidentiality for safety

// DB 4/25/22: add non-repudiation
NonRepudiation is a SECURITY_LABEL 
   has identifier "NonRepudiation"
   has description "Non-deniability of authenticated information such as digital signature.".

HazardCondition is a type of HAZARD. // replaced Hazard by HazardCondition so as to be like ThreatCondition below. DB Agreed.
   mitigatesControl describes HazardCondition with values of type Control.
   enhancesControl describes HazardCondition with values of type Control.
   lossCategory describes HazardCondition with values of type LossCategory. // a HazardCondition may relate to multiple categories
   triggers (note "the risk event(s) that can be triggered by this") describes HazardCondition with values of type SafetyAccident.
   
Exploitation (note "unmitigated vulnerability exploited by an attack access vector") is a type of ENTITY.
   uses describes Exploitation with values of type AttackAccessVectors.
   uses is a type of wasImpactedBy.
   exploits describes Exploitation with values of type Vulnerability.
   exploits is a type of wasImpactedBy.

ThreatCondition is a type of THREAT.
   Sec:source of ThreatCondition only has values of type Exploitation.
   securityLabel describes ThreatCondition with values of type SECURITY_LABEL.
   triggers describes ThreatCondition with values of type SecurityViolation.
   
SafetyRequirement is a type of REQUIREMENT.
  // inherited
  //   governs to refer to enclave, hw component, sw component, or interface ...

SecurityRequirement is a type of REQUIREMENT.
  // inherited
  //   governs to refer to achitecture elements: e.g., enclave, hw component, sw component, or interface ...
  
SafetyRequirementSet is a type of RequirementSet.
   content of SafetyRequirementSet only has values of type SafetyRequirement.
   // future: put range constraint on 'specifies property

SecurityRequirementSet is a type of RequirementSet.
   content of SecurityRequirementSet only has values of type SecurityRequirement.
    // future: put range constraint on 'specifies' property
   
// property binding
// RiskEvent, Safety Violation, Hazard

RiskEvent is a type of ENTITY.
   SS:severity describes RiskEvent with values of type float.
   SS:severity describes RiskEvent with at most 1 value.
   probability describes RiskEvent with values of type float.
   probability describes RiskEvent with at most 1 value.
   
SecurityViolation is a type of RiskEvent.
   // future: add more properties

SafetyAccident is a type of RiskEvent.
   // future: add more properties
