//
//
// Copyright Â© 2020 General Electric Company
//
// Author: Abha Moitra, Galois Team
// Date: 2020-05-06
// Last update: 2020-05-20
//
//

 uri "http://sadl.org/RACK/TestCase" alias TC.

 import "http://sadl.org/RACK/Analysis".
 import "http://sadl.org/RACK/ExtSys".
 import "http://sadl.org/RACK/Software".
 import "http://sadl.org/RACK/SysAssurance".
 import "http://sadl.org/RACK/Req".

// Notes for data mapping:
//        concatenating "<req name> - <test case name>" as the test case name and is assumed to be unique for the moment.
//        datePerformed, testStrategy, testResult are optional

TestCaseAnalysis is a type of Analysis
    described by testFile with a single value of type File // file with tests that are to be run
    described by testCases with values of type TestCase  // test cases in the test file
    described by testFileCoverage with values of type float. // summary info

// test case should ideally not be  performed by author of test case
// should this be at test case level or at test file level?
TestCase is a class,
    described by datePerformed with a single value of type date
    described by testName with a single value of type string
    described by testReq with a single value of type Requirement
    described by testResult with a single value of type float
    described by testStrategy with a single value of type TestStrategy
    described by testInputs with values of type TestInput,
    described by testParameters with values of type TestParameter,
    described by testRequirement with a single value of type Requirement,
    described by testStrategy with a single value of type TestStrategy,
    described by testAuthor with a single value of type Entity.


TestStrategy is a class,  must be one of
    {Fun (alias "Functional Data Completeness Analysis"),
    LCA (alias "Logic Coverage Analysis"),
    ECP (alias "Equivalence Class Partitioning Analysis"),
    BVA (alias "Boundary Value Analysis"),
    Rob (alias "Robustness Test Analysis"),
    DEC (alias "Decomposition and Equation Coverage"),
    MTC (alias "Manual Test Cases"),
    Ctx (alias "Context Analysis")}.

TestCoverage is a class,
    described by coverageRequirement with a single value of type Requirements,
    described by coverageStrategy with a single value of type TestStrategy,
    described by coverageAmount with a single value of type TestCoverageAmount.

TestCoverageAmount is a class must be one of {
    X (alias "fully covered"),
    P (alias "limited coverage"),
    na (alias "not applicable"),
    J (alias "justified no coverage")
}.

TestInput is a class,
    described by inputName with a single value of type string,
    described by inputValue with a single value of type string.

TestParameter is a class,
    described by parameterName with a single value of type string,
    described by parameterValue with a single value of type string.

TestReport is a type of Artifact,
    described by testTarget with a single value of type PackageVersion,
    described by testCaseGeneratedBy with a single value of type TestCase,
    described by testEnvironment with a single value of type Deployment,
    described by tester with values of type Entity,
    described by measurements with values of type TestMetric,
    described by name with a single value of type string.

// Test metrics

TestMetric is a class.

TestCoverage is a type of TestMetric,
    described by targetFile with values of type SourceFile,
    described by percentage with a single value of type float.

// Evidential Assurance Case Fragment per Lockheed (EACF)
EACF is a type of Artifact
    described by purpose with a single value of type string,
    described by coverageCriteria with a single value of type string,
    described by simulationRationale with a single value of type string,
    described by sesConfig with a single value of type string,
    described by assumptions with values of type string,
    described by requirements with values of type Requirement,
    described by traceabilityArtifacts with values of type string,
    described by souceCode with values of type SourceInfo,
    described by moduleUnderTest with values of type SourceInfo,
    described by systemUndertest with a single value of type PackageVersion,
    described by testCaseReports with values of type TestReport.
